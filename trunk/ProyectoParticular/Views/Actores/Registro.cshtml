@model ControladoresCore.ViewModels.ActoresVM
@using ControladoresCore.Extensiones
@{
    ViewBag.Title = "Actores - Registro";
}
<div class="row">
    <div class="col-md-10">

    </div>

</div>
<div class="panel panel-primary">
    <div class="panel-heading">
        <h4 class="panel-title">Registro del informe</h4>
    </div>
    <div class="panel-body">
        @using (Html.BeginCard("Actor seleccionado"))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                <div class="row">

                    <div class=" col-sm-12">
                        <h5 class="pull-right text-muted " style="
                    padding-top: -20px;
                    border-top-width: -20px;
                    margin-top: -10px;
                    padding-top: 0px;">
                            Registro Activo: @if (Model.Activo)
                            {<i class="glyphicon glyphicon-ok-sign" style="color:darkseagreen"></i>}
                            else
                            {<i class="glyphicon glyphicon-remove-sign" style="color:indianred"></i>}
                        </h5>
                    </div>
                </div>
                <div class="row">
                    <div id="divCampos" class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Codigo, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Codigo, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Codigo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email2, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Email2, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Email2, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Telefono2, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Telefono2, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Telefono2, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    
                        <div class="form-group">
                            @Html.LabelFor(model => model.Observaciones, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Observaciones, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

    </div>
</div>


<div class="card" id="dyn_2">
    <h4 style="padding:1px; background-color:var(--color-primary)" class="card-header mt-0"></h4>
    <div class="card-body fade-in p-2">
        <div class="col-lg-12 pull-left botonera">
            @HtmlHelperExtension.Boton("Actores","Listado",ViewBag.Seccion)

            @HtmlHelperExtension.Boton("Actores", "Update", Model.Id, ViewBag.DatosDeUnaPagina.AutorizadoAOperarLaPagina,ViewBag.Seccion)

            @HtmlHelperExtension.Boton("Actores", "Delete", Model.Id, ViewBag.DatosDeUnaPagina.AutorizadoAOperarLaPagina, ViewBag.DatosDeUnaPagina.AutorizadoAAccionesEspeciales, Model.Activo,ViewBag.Seccion)
        </div>
    </div>
</div>

<div id="accordion">
    <div class="card">
        <div class="card-header p-0" style="background-color: #adadad;border-color:grey;color:white;" id="headingOne" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
            <h5 class="mb-0">
                <button class="btn btn-link" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                    Historia del Registro
                </button>
            </h5>
        </div>

        <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordion">
            <div class="card-body">
                @Html.Raw(Model.Historia)
            </div>
        </div>
    </div>
</div>