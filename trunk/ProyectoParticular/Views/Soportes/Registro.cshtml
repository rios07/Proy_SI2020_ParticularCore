@using System.Web.Mvc.Html
@using ControladoresCore.Extensiones
@model ControladoresCore.ViewModels.SoportesVM
@{
    ViewBag.Title = "Soportes - Registro";
}
<div class="row">
    <div class="col-md-10">

    </div>

</div>
@using (Html.BeginCard("Soporte seleccionado"))
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            @Html.HiddenFor(model => model.Id)
            <div class="row">

                <div class=" col-sm-12">
                    <h5 class="pull-right text-muted " style="border-top-width: -20px; margin-top: -10px; padding-top: -20px; padding-top: 0px;">
                        Registro Activo:
                        @if (Model.Activo)
                        {
                            <i class="mdi mdi-check-circle-outline" style="color: darkseagreen"></i>
                        }
                        else
                        {
                            <i class="mdi mdi-close-circle-outline" style="color: indianred"></i>
                        }
                    </h5>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Numero, new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Numero, new {htmlAttributes = new {@class = "form-control", disabled = "disabled", @readonly = "readonly"}})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FechaDeEjecucion, new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    <div class="input-group">
                        <span class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </span>
                        @Html.EditorFor(model => model.FechaDeEjecucion, new {htmlAttributes = new {@class = "form-control", disabled = "disabled", @readonly = "readonly"}})
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Prioridad, new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Prioridad, new {htmlAttributes = new {@class = "form-control", disabled = "disabled", @readonly = "readonly"}})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EstadoDeSoporte, new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.EstadoDeSoporte, new {htmlAttributes = new {@class = "form-control", disabled = "disabled", @readonly = "readonly"}})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FechaDeCierre, new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    <div class="input-group">
                        <span class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </span>
                        @Html.EditorFor(model => model.FechaDeCierre, new {htmlAttributes = new {@class = "form-control", disabled = "disabled", @readonly = "readonly"}})
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UsuarioQueSolicita, new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.UsuarioQueSolicita, new {htmlAttributes = new {@class = "form-control", disabled = "disabled", @readonly = "readonly"}})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Texto, new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.TextAreaFor(model => model.Texto, new {@class = "form-control html-text-editor", disabled = "disabled", @readonly = "readonly", rows = "5"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Observaciones, new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.TextAreaFor(model => model.Observaciones, new {@class = "form-control", disabled = "disabled", @readonly = "readonly", rows = "5"})
                </div>
            </div>
            @if ((bool) TempData["EsMasterAdmin"])
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.ObservacionesPrivadas, new {@class = "control-label col-md-3"})
                    <div class="col-md-9">
                        @Html.TextAreaFor(model => model.ObservacionesPrivadas, new {@class = "form-control", disabled = "disabled", @readonly = "readonly", rows = "5"})
                    </div>
                </div>
            }
            <div class="form-group">
                @Html.LabelFor(model => model.EmailUsuarioQueCreo, new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.EmailUsuarioQueCreo, new {htmlAttributes = new {@class = "form-control", disabled = "disabled", @readonly = "readonly"}})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailUsuarioQueSolicito, new {@class = "control-label col-md-3"})
                <div class="col-md-9">
                    @Html.EditorFor(model => model.EmailUsuarioQueSolicito, new {htmlAttributes = new {@class = "form-control", disabled = "disabled", @readonly = "readonly"}})
                </div>
            </div>


        </div>
    }
}

@using (Html.BeginCard("Adjuntos"))
{
    <ul class="nav nav-tabs" role="tablist">
        <li class="nav-item">
            <a class="nav-link active" data-toggle="tab" href="#profile" id="TabArchivos" role="tab">Archivos</a>
        </li>
        <li class="nav-item">
            <a class="nav-link " data-toggle="tab" href="#home" role="tab">Visualizador de archivos</a>
        </li>

    </ul>

    <!-- Tab panes -->
    <div class="tab-content">
        <div class="tab-pane active p-3" id="archivos" role="tabpanel">
            <p class="font-14 mb-0">
                @{ Html.RenderPartial("_ArchivosMostrar"); }
            </p>
        </div>
        <div class="tab-pane  p-3" id="home" role="tabpanel">
            <p class="font-14 mb-0">
                @{ Html.RenderPartial("_CarouselImagenes"); }
            </p>
        </div>


    </div>
}

<div class="card" id="dyn_2">
    <h4 style="background-color: var(--color-primary); padding: 1px;" class="card-header mt-0"></h4>
    <div class="card-body fade-in p-2">
        <div class="col-lg-12 pull-left botonera">
            @HtmlHelperExtension.Boton("Soportes", "Listado", ViewBag.Seccion)
            @HtmlHelperExtension.Boton("Soportes", "Update", Model.Id, ViewBag.DatosDeUnaPagina.AutorizadoAOperarLaPagina, ViewBag.DatosDeUnaPagina.AutorizadoAAccionesEspeciales, Model.Activo, ViewBag.Seccion)
            <div class="btn-group dropup mo-mb-2">
                <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Acciones</button>
                <div class="dropdown-menu">
                    
                    @HtmlHelperExtension.BotonDeAcciones("Soportes", "Delete", Model.Id, ViewBag.DatosDeUnaPagina.AutorizadoAOperarLaPagina, ViewBag.DatosDeUnaPagina.AutorizadoAAccionesEspeciales, Model.Activo, ViewBag.Seccion)
                </div>
            </div>  
            <a class="btn btn-danger removeOnIframe" href="/intranet/Home/Index">Cancelar</a>
        </div>
    </div>
</div>
<div id="accordion">
    <div class="card">
        <div class="card-header p-0" style="background-color: #adadad; border-color: grey; color: white;" id="headingOne" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
            <h5 class="mb-0">
                <button class="btn btn-link" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                    Historia del Registro
                </button>
            </h5>
        </div>

        <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordion">
            <div class="card-body">
                @Html.Raw(Model.Historia)
            </div>
        </div>
    </div>
</div>