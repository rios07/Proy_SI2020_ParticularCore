-- =====================================================
-- Author:		Dpto de Sistemas - #EMPRESA#
-- CREATE date: 11/06/2018 
-- Description:	01__Core__CREATE Tablas - DB_XXX
-- =====================================================

--DROP DATABASE DB_XXX
--GO

CREATE DATABASE DB_XXX
GO
ALTER DATABASE DB_XXX SET RECOVERY SIMPLE
USE DB_XXX
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =====================================================
-- TABLAS - Inicio de la creacion por orden alfabético
-- ------------------------------
	
	
	
------------------------------------------- Aclaración: Identity(1,1) -----------------------------------------------
-- Antes teníamos id=0 p/ algunas tablas maestras como: Contextos, FuncionesDePaginas, Paginas, Tablas, Usuarios.
-- Se usaban p/ FK de otras tablas en reemplazo de un valor NULL que nos traería problemas con todos los JOINs.
-- Para cuando queremos indicar "sin contexto", "sin página", "sin tabla", "sin usuario" (#).
-- Esto quedó atrás, y a partir de ahora utilizamos TODO COMENZANDO CON id=1.
-- Los casos (#) siguen valiendo, pero con id=1, y nunca se mostrarán a un usuario de trabajo, ya que son tablas
-- que no son de acceso de los usuarios, o que pertenecen al contexto-id=1, que no será de acceso a los usuarios.
-- En definitiva, UTILIZAREMOS TODOS LOS CASOS id=1 PARA TODOS LOS VALORES POR DEFECTO.
---------------------------------------------------------------------------------------------------------------------



	
CREATE TABLE Actores
-- Cada usuarios tendrá un ActorId q indica a q grupo pertence:
-- Sistemas, Administración, Compras, Ventas, Proveedores Mayoristas, Proveedores Minoristas, etc.
(
    id									INT   IDENTITY(1,1)	NOT NULL
    ,ContextoId							INT				NOT NULL
    ,TipoDeActorId						INT				NOT NULL
    ,Codigo								VARCHAR(16)		NOT NULL
    ,Nombre								VARCHAR(50)		NOT NULL
	,Email								VARCHAR(60)							
	,Email2								VARCHAR(60)							
	,Telefono							VARCHAR(60)							
	,Telefono2							VARCHAR(60)							
	,Direccion							VARCHAR(1000)						
	,Observaciones						VARCHAR(1000)						
	,Activo								BIT				NOT NULL	DEFAULT 1	
    ,CONSTRAINT PK_Actores_Id			PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_Actores_Codigo		UNIQUE NONCLUSTERED (ContextoId, Codigo)
	,CONSTRAINT UQ_Actores_Nombre		UNIQUE NONCLUSTERED (ContextoId, Nombre)
)
GO




CREATE TABLE Archivos
-- Tabla genérica, para ser utilizada por todas las que tengan Archivos, sean de documentos o imágenes.
-- Llevan FK a ExtensionesDeArchivos, tabla q definirá el ícono, el programa q utilizan y el tipo de Archivo (Doc, Cad, imágen, etc).
-- Se asocian a una tabla con TablaId y RegistroId
-- Ubicacion y Nombre: Formato completo con Path: "root/carpetaDeContexto/carpetaDeTabla/nombre.ext", donde NombreFisicoCompleto = "nombre.ext"
(
    id								INT   IDENTITY(1,1)	NOT NULL
    ,ContextoId						INT				NOT NULL
    ,TablaId						INT				NOT NULL
    ,RegistroId						INT				NOT NULL
    ,NombreFisicoCompleto			VARCHAR(100)	NOT NULL 
    ,NombreAMostrar					VARCHAR(100)	NOT NULL 
	--,UbicacionId					INT				NOT NULL
	,ExtensionDeArchivoId			INT				NOT NULL
	,Orden							INT				NOT NULL -- Si un registro tiene + de 1 Archivo --> Este campo los "ordena".
	--,Codigo							VARCHAR(12)				 -- Lo dejamos q pueda ser null, pero puede ser util p 
	,Observaciones					VARCHAR(1000)
	--,Activo							BIT				NOT NULL	DEFAULT 1	VAMOS A PERMITIR ELIMINAR
    ,CONSTRAINT PK_Archivos_Id		PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_Archivos_Nombre	UNIQUE NONCLUSTERED (ContextoId, TablaId, RegistroId, NombreFisicoCompleto)
	,CONSTRAINT UQ_Archivos_NombreAMostrar	UNIQUE NONCLUSTERED (ContextoId, TablaId, RegistroId, NombreAMostrar)
	--,CONSTRAINT UQ_Archivos_Codigo	UNIQUE NONCLUSTERED (Codigo)
)
GO




CREATE TABLE Contactos
(
	id									INT   IDENTITY(1,1)	NOT NULL -- id=1 DEFAULT (Para lo que no involucra Contactos)
	,ContextoId							INT				NOT NULL
	,EsUnaOrganizacion					BIT				NOT NULL
    ,NombreCompleto						VARCHAR(150)	NOT NULL
    ,Alias								VARCHAR(50)
    ,Organizacion						VARCHAR(100) -- Ver si no se repite con la idea de GruposDeContactos (o al confeccionar una Rel, se sugiere la "Organizacion")
    ,RelacionConElContacto				VARCHAR(50)
	,Email								VARCHAR(60)
	,Email2								VARCHAR(60)
	,Telefono							VARCHAR(60)
	,Telefono2							VARCHAR(60)
	,Direccion							VARCHAR(1000)
	,Url								VARCHAR(255)
	,Observaciones						VARCHAR(1000)
	--,Activo								BIT				NOT NULL	DEFAULT 1
	,CONSTRAINT PK_Contactos_Id			PRIMARY KEY CLUSTERED (id)
    ,CONSTRAINT UQ_Contactos_NoRepetir	UNIQUE NONCLUSTERED (ContextoId, NombreCompleto)
)
GO




CREATE TABLE Contextos
-- Los contextos definen el ambiente de operación. Aislando los datos entre ellos.
-- Todas las tablas que tienen contenido no generico deben llevar un ContratoId para separar su info de otro contrato.
(
    id										INT   IDENTITY(1,1)	NOT NULL  -- id=1 DEFAULT (Para lo que no involucra Contextos)
    ,Numero									INT				NOT NULL
    ,Nombre									VARCHAR(100)	NOT NULL
	,Codigo									VARCHAR(40)		NOT NULL
	,CarpetaDeContenidos					VARCHAR(16)		NOT NULL
	--,ContextoDeSistema						BIT				NOT NULL	DEFAULT 0
    --,ImagenUrl								VARCHAR(255)		NOT NULL
	,Observaciones							VARCHAR(1000)
	,CONSTRAINT PK_Contextos_Id				PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_Contextos_Nombre			UNIQUE NONCLUSTERED (Nombre)
	,CONSTRAINT UQ_Contextos_Numero			UNIQUE NONCLUSTERED (Numero)
	,CONSTRAINT UQ_Contextos_Codigo			UNIQUE NONCLUSTERED (Codigo)
	,CONSTRAINT UQ_Contextos_CarpetaDeContenidos	UNIQUE NONCLUSTERED (CarpetaDeContenidos)
)
GO




CREATE TABLE CuentasDeEnvios
(
    id							INT   IDENTITY(1,1)	NOT NULL
    ,Nombre						VARCHAR(40)		NOT NULL -- Identificación de la cuenta, pudiendo indicar el propósito de su uso.
    ,CuentaDeEmail				VARCHAR(60)		NOT NULL
	,PwdDeEmail					VARCHAR(40)		NOT NULL
	,Smtp						VARCHAR(60)		NOT NULL
	,Puerto						INT				NOT NULL
    ,Observaciones				VARCHAR(1000)
	,CONSTRAINT PK_CuentasDeEnvios_Id		PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_CuentasDeEnvios_Nombre	UNIQUE NONCLUSTERED (Nombre)
)
GO




CREATE TABLE Dispositivos
(
    id										INT   IDENTITY(1,1)	NOT NULL -- id=1 DEFAULT "Sin Dispositivo"
    ,AsignadoAUsuarioId						INT				NOT NULL -- id=1 cuando "no está asignado".
	,MachineName							VARCHAR(50)		NOT NULL -- @Imei
	,OSVersion								VARCHAR(100)	NOT NULL
	,UserMachineName						VARCHAR(50)		NOT NULL
	,ClavePrivada							VARCHAR(40)		NOT NULL	DEFAULT ''
	,ClavePrivadaEntregada					BIT				NOT NULL	DEFAULT 0
	,ClavePrivadaFechaEntrega				DATETIME				
	,Observaciones							VARCHAR(1000)
	,Activo									BIT				NOT NULL	DEFAULT 1	
    ,CONSTRAINT PK_Dispositivos_Id				PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_Dispositivos_MachineName		UNIQUE NONCLUSTERED (MachineName)
)
GO




CREATE TABLE EnviosDeCorreos
-- El envío se hace al correo del campo "Email", que por defecto se sacó de la Tabla del UsuarioDestinatarioId, el cual es opcional.
-- Además, Utilizaremos como referencia, cuando estén los valores: TablaId y RegistroId identificamos el registro del cual se toma la info a enviar. Esto será opcional.
(
    id								INT   IDENTITY(1,1)	NOT NULL
	,UsuarioOriginanteId			INT				NOT NULL -- El que "pide" el envío, que puede ser distinto de quien la carga.
	,UsuarioDestinatarioId			INT				NOT NULL -- id=1 cuando "no hay usuario". / Serivrá para corroborar a quién se lo quisimois manda. No se usa en el envío.
	,TablaId						INT				NOT NULL -- id=1 cuando es "sin tabla".
	,RegistroId						INT				NULL -- Va nulo cuando no hay referencia a un registro.
	,EmailDeDestino					VARCHAR(60)		NOT NULL -- Es el unico verdaderamente necesario. Ya que es a donde se envía el correo.
	,Asunto							VARCHAR(200)	NOT NULL
	,Contenido						VARCHAR(MAX)	NOT NULL
	,FechaPactadaDeEnvio			DATETIME		NOT NULL		
	,CONSTRAINT PK_EnviosDeCorreos_Id	PRIMARY KEY CLUSTERED (id)
)
GO




CREATE TABLE EstadosDeLogErrores
(
    id								INT				NOT NULL
	,Nombre							VARCHAR(30)		NOT NULL
	,Nomenclatura					VARCHAR(12)		NOT NULL
	,Orden							INT				NOT NULL -- El Orden sireve para ordenar los registro por un "peso"
	,Observaciones					VARCHAR(1000)
	,CONSTRAINT PK_EstadosDeLogErrores_Id			PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_EstadosDeLogErrores_Nombre		UNIQUE NONCLUSTERED (Nombre)
	,CONSTRAINT UQ_EstadosDeLogErrores_Nomenclatura	UNIQUE NONCLUSTERED (Nomenclatura)
	,CONSTRAINT UQ_EstadosDeLogErrores_Orden		UNIQUE NONCLUSTERED (Orden)
)
GO




CREATE TABLE EstadosDeSoportes
(
    id						INT				NOT NULL
	,Nombre					VARCHAR(30)		NOT NULL
	,Nomenclatura			VARCHAR(12)		NOT NULL
	,Orden					INT				NOT NULL -- El Orden sireve para ordenar los registro por un "peso"
	,Observaciones			VARCHAR(1000)
	,CierraSoporte			BIT				NOT NULL	DEFAULT 0
	,Activo					BIT				NOT NULL	DEFAULT 1	
	,CONSTRAINT PK_EstadosDeSoportesId				PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_EstadosDeSoportes_Nombre			UNIQUE NONCLUSTERED (Nombre)
	,CONSTRAINT UQ_EstadosDeSoportes_Nomenclatura	UNIQUE NONCLUSTERED (Nomenclatura)
	,CONSTRAINT UQ_EstadosDeSoportes_Orden			UNIQUE NONCLUSTERED (Orden)
)
GO




CREATE TABLE EstadosDeTareas
(
    id						INT				NOT NULL
	,Nombre					VARCHAR(30)		NOT NULL -- Asignada, Iniciada, Finalizada, Aplazada, Esperando Acción, Etc.
	,Nomenclatura			VARCHAR(12)		NOT NULL
	,Orden					INT				NOT NULL -- El Orden sireve para ordenar los registro por un "peso"
	,Observaciones			VARCHAR(1000)
	,Activo					BIT				NOT NULL	DEFAULT 1	
	,CONSTRAINT PK_EstadosDeTareasId			PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_EstadosDeTareas_Nombre		UNIQUE NONCLUSTERED (Nombre)
	,CONSTRAINT UQ_EstadosDeTareas_Nomenclatura	UNIQUE NONCLUSTERED (Nomenclatura)
	,CONSTRAINT UQ_EstadosDeTareas_Orden		UNIQUE NONCLUSTERED (Orden)
)
GO




CREATE TABLE ExtensionesDeArchivos
-- Tabla genérica, para ser utilizada por Archivos. Definirá el ícono, el programa q utilizan y el tipo de Archivo (Doc, Cad, imágen, etc).
(
    id								INT   IDENTITY(1,1)	NOT NULL
    ,Nombre							VARCHAR(8)		NOT NULL -- ES LA EXTENCIÓN (exe, doc, png, etc).
	,IconoId						INT				NOT NULL
    ,TipoDeArchivoId				INT				NOT NULL -- Doc, Cad, imágen, etc
    ,ProgramaAsociado				VARCHAR(40)		NOT NULL -- Utilizado p la exportación saber a q programa llamar
	,Observaciones					VARCHAR(1000)
	,CONSTRAINT PK_ExtensionesDeArchivos_Id		PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_ExtensionesDeArchivos_Nombre	UNIQUE NONCLUSTERED (Nombre)
)
GO




CREATE TABLE FuncionesDePaginas
-- Incluye tanto los "tipos" de páginas (Insert, Update, etc.), como las funciones concretas (Delete, etc.).
(
	id						INT				NOT NULL  -- id=1 DEFAULT (Para lo que no involucra funciones de tablas)
	,Nombre					VARCHAR(30)		NOT NULL
	,NombreAMostrar			VARCHAR(50)		NOT NULL
	,Observaciones			VARCHAR(1000)			
	,GeneraPagina			BIT				NOT NULL	DEFAULT 0	
	,CONSTRAINT PK_FuncionesDePaginas_Id				PRIMARY KEY CLUSTERED (id)
    ,CONSTRAINT UQ_FuncionesDePaginas_Nombre			UNIQUE NONCLUSTERED (Nombre)
    ,CONSTRAINT UQ_FuncionesDePaginas_NombreAMostrar	UNIQUE NONCLUSTERED (NombreAMostrar)
)
GO




CREATE TABLE GruposDeContactos
(
    id										INT   IDENTITY(1,1) NOT NULL
	,ContextoId								INT				NOT NULL
	,Nombre									VARCHAR(30)		NOT NULL
	,Observaciones							VARCHAR(1000)
	,CONSTRAINT PK_GruposDeContactos_Id		PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_GruposDeContactos_Nombre	UNIQUE NONCLUSTERED (Nombre)
)
GO




CREATE TABLE Iconos
-- Nombre, es como se llama el ícono (Ejemplo: 'PDF').
-- La Ruta al archivo del icono queda definida por Ubicacion + Imagen (Ejemplo: \Carpeta1\ + 'pdf.png'.
-- La ubicación será la misma para todos, y definida de entrada.
(
    id							INT   IDENTITY(1,1)	NOT NULL  -- id=1 DEFAULT
	,Nombre						VARCHAR(50)		NOT NULL
	,Imagen						VARCHAR(50)		NOT NULL
	--,UbicacionId				INT				NOT NULL
	,Altura						INT				NOT NULL
	,Ancho						INT				NOT NULL
	,OffsetX					INT				NOT NULL	DEFAULT 0
	,OffsetY					INT				NOT NULL	DEFAULT 0
	,Observaciones				VARCHAR(1000)			
	,Activo						BIT				NOT NULL	DEFAULT 1	
	,CONSTRAINT PK_Iconos_Id		PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_Iconos_Nombre	UNIQUE NONCLUSTERED	(Nombre)
)
GO




CREATE TABLE IconosCSS
(
    id								INT   IDENTITY(1,1)	NOT NULL  -- id=1 DEFAULT
	,Nombre							VARCHAR(50)		NOT NULL
	,CSS							VARCHAR(100)	NOT NULL
	,Observaciones					VARCHAR(1000)			
	,CONSTRAINT PK_IconosCSS_Id		PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_IconosCSS_Nombre	UNIQUE NONCLUSTERED	(Nombre)
	,CONSTRAINT UQ_IconosCSS_CSS	UNIQUE NONCLUSTERED	(CSS)
)
GO




CREATE TABLE Importaciones
-- Con el log de registros haremos el tracking de quien la importó y en que fecha.
-- Lleva asociada la Tabla "Archivos" para guardar los archivos importados.
(
    id									INT   IDENTITY(1,1)	NOT NULL
	,ContextoId							INT				NOT NULL
    ,UsuarioQueImportaId				INT				NOT NULL
	,TablaId							INT				NOT NULL -- Tabla principal de destino de los datos, del procedimiento de importación.
	,Numero								INT				NOT NULL -- Para poder referenciarlas, ante inconvenientes.
    ,Fecha								DATETIME		NOT NULL
	,Observaciones						VARCHAR(1000)			
	,ObservacionesPosteriores			VARCHAR(1000)
	,Activo								BIT				NOT NULL	DEFAULT 1	
	,CONSTRAINT PK_Importaciones_Id		PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_Importaciones_Numero	UNIQUE NONCLUSTERED (ContextoId, Numero)
)
GO




CREATE TABLE ImportanciasDeTareas
-- Baja, Media, Alta
(
    id						INT				NOT NULL -- id=1 --> Importancia media
	,Nombre					VARCHAR(30)		NOT NULL -- Baja, Media, Alta.
	,Nomenclatura			VARCHAR(12)		NOT NULL
	,Orden					INT				NOT NULL -- El Orden sireve para ordenar los registro por un "peso"
	,Observaciones			VARCHAR(1000)			
	,CONSTRAINT PK_ImportanciasDeTareas_Id				PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_ImportanciasDeTareas_Nombre			UNIQUE NONCLUSTERED (Nombre)
	,CONSTRAINT UQ_ImportanciasDeTareas_Nomenclatura	UNIQUE NONCLUSTERED (Nomenclatura)
	,CONSTRAINT UQ_ImportanciasDeTareas_Orden			UNIQUE NONCLUSTERED (Orden)
)
GO




CREATE TABLE LogEnviosDeCorreos
-- Registra que pasó con el intento de envío
(
    id								INT   IDENTITY(1,1) NOT NULL
	,EnvioDeCorreoId				INT				NOT NULL
	,Satisfactorio					BIT 			NOT NULL
	,Fecha							DATETIME		NOT NULL
	,Observaciones					VARCHAR(1000) -- Acá se indicará el error
	,ObservacionesDeRevision		VARCHAR(1000) DEFAULT '' -- Acá se indicará nuestro comentario al revisar un error.
	,CONSTRAINT PK_LogEnviosDeCorreos_Id		PRIMARY KEY CLUSTERED (id)
)
GO




CREATE TABLE LogErrores
(
	id								INT   IDENTITY(1,1)	NOT NULL
	,UsuarioQueEjecutaId			INT				NOT NULL
	,FechaDeEjecucion				DATETIME		NOT NULL
	,TablaId						INT				NOT NULL -- id=1 cuando es "sin tabla".
	,TipoDeOperacionId				INT				NOT NULL
	,SP								VARCHAR(80) -- De SQL				
	,NumeroDeError					INT
	,LineaDeError					INT
	,ErrorEnAmbienteSQL				BIT		NOT NULL	DEFAULT 0
	,Mensaje						VARCHAR(1000)	-- Mensaje de Error
	,PaginaId						INT				NOT NULL -- id=1 cuando es "sin página".
	,Accion							VARCHAR(80) -- De .Net
	,Capa							VARCHAR(80) -- De .Net
	,Metodo							VARCHAR(80) -- De .Net
	,MachineName					VARCHAR(80) -- De .Net
	,EstadoDeLogErrorId				INT				NOT NULL
	,Observaciones					VARCHAR(1000)	-- Obs nuestras, posteriormente, con la solución
	,CONSTRAINT PK_LogErrores_Id	PRIMARY KEY CLUSTERED (id)
)
GO




CREATE TABLE LogErroresApp
(
	id							INT IDENTITY(1,1)	NOT NULL
	,FechaDeEjecucion			DATETIME			NOT NULL
	,TokenId					VARCHAR(40)			NULL
	,DispositivoMachineName		VARCHAR(50)			NULL
	,UsuarioId					INT					NULL
	,Metodo						VARCHAR(255)		NOT NULL
	,Clase						VARCHAR(255)		NOT NULL
	,Linea						INT					NOT NULL
	,Texto						VARCHAR(255)		NOT NULL
	,CONSTRAINT PK_LogErroresApp_id PRIMARY KEY CLUSTERED (id)
)
GO




CREATE TABLE LoginDeDispositivos
(
	id								INT			IDENTITY(1,1)	NOT NULL
    ,DispositivoId					INT				NOT NULL
	,UsuarioId						INT				NOT NULL
	,Token							VARCHAR(40)		NOT NULL
	,FechaDeEjecucion				DATETIME		NOT NULL
	,InicioValides					DATETIME		NOT NULL
	,FinValidez						DATETIME		NOT NULL
	,CONSTRAINT PK_LoginDeDispositivos_Id		PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_LoginDeDispositivos_Token	UNIQUE NONCLUSTERED (Token)
)
GO




CREATE TABLE LoginDeDispositivosRechazados
(
    id								INT			IDENTITY(1,1)	NOT NULL
    ,DispositivoId					INT				NOT NULL -- id=1 cuando es "sin dispositivo".
	,UsuarioId						INT				NOT NULL -- id=1 cuando no se identifica al usuario.
	,FechaDeEjecucion				DATETIME		NOT NULL
	,JSON							VARCHAR(5000)	NOT NULL -- Lo limitamos a 5000, por que si hubiera errores multiples, nos puede crecer la BD sin control si este campo es VARCHAR(MAX).
    ,UsuarioIngresado				VARCHAR(81)		NOT NULL
    ,MachineName					VARCHAR(50)		NOT NULL
    ,MotivoDeRechazo				VARCHAR(1000)	NOT NULL
    ,CONSTRAINT PK_LoginDeDispositivosRechazados_Id		PRIMARY KEY CLUSTERED	(id)
)
GO




CREATE TABLE LogLogins
(
    id								INT   IDENTITY(1,1)	NOT NULL
	,UsuarioId						INT				NOT NULL -- id=1 cuando no se identifica al usuario.
	,FechaDeEjecucion				DATETIME		NOT NULL
	,UsuarioIngresado				VARCHAR(81)		NOT NULL -- Cuando UsuarioId=1 --> guarda el "nombre de usuario ingresado": UserName@Contexto
	,TipoDeLogLoginId				INT				NOT NULL
	,DispositivoId					INT				NOT NULL -- id=1 cuando es "sin dispositivo"
	,CONSTRAINT PK_LogLogins_Id		PRIMARY KEY CLUSTERED (id)
)
GO




CREATE TABLE LogRegistros
(
    id									INT   IDENTITY(1,1)	NOT NULL
	,UsuarioQueEjecutaId				INT				NOT NULL
	,FechaDeEjecucion					DATETIME		NOT NULL
	,TablaId							INT				NOT NULL -- id=1 cuando es "sin tabla".	
	,RegistroId							INT				NOT NULL -- No es FK
	,LoginDeDispositivoId				INT				NOT NULL -- id=1 cuando es desde una PC --> "sin dispositivo".	
	,TipoDeOperacionId					INT				NOT NULL
	,CONSTRAINT PK_LogRegistros_Id		PRIMARY KEY CLUSTERED (id)
)
GO




CREATE TABLE Notificaciones
(
    id										INT   IDENTITY(1,1)	NOT NULL
	,ContextoId								INT				NOT NULL -- id=1 cuando es "sin usuario/sin contexto". --> Broadcast a TODOS los contextos.
    ,Fecha									DATETIME		NOT NULL
	,Numero									INT				NOT NULL
    ,UsuarioDestinatarioId					INT				NOT NULL -- id=1 cuando es "sin usuario". --> Broadcast al contexto.
	,TablaId								INT				NOT NULL
	,RegistroId								INT				NOT NULL
	,IconoCSSId								INT				NOT NULL
	,Cuerpo									VARCHAR(1000)	NOT NULL
	,Leida									BIT				NOT NULL	DEFAULT 0
	,Activo									BIT				NOT NULL	DEFAULT 1	
	,CONSTRAINT PK_Notificaciones_Id		PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_Notificaciones_Numero	UNIQUE NONCLUSTERED (ContextoId, Numero)
)
GO




CREATE TABLE Paginas
(
	id									INT   IDENTITY(1,1) NOT NULL -- id=1 DEFAULT (Para lo que no involucra Paginas)
	,TablaId							INT				NOT NULL -- id=1 cuando es "sin tabla".
	,FuncionDePaginaId					INT				NOT NULL
	,Nombre								VARCHAR(100)	NOT NULL
	,Titulo								VARCHAR(100)	
	,Tips								VARCHAR(2000)	
	,Observaciones						VARCHAR(2000)	
	,SeMuestraEnAsignacionDePermisos	BIT				NOT NULL	DEFAULT 1
	,CONSTRAINT PK_Paginas_Id		PRIMARY KEY CLUSTERED (id)
    ,CONSTRAINT UQ_Paginas_Nombre	UNIQUE NONCLUSTERED (Nombre)
    ,CONSTRAINT UQ_Paginas			UNIQUE NONCLUSTERED (Nombre, TablaId, FuncionDePaginaId)
)
GO




CREATE TABLE ParametrosDelSistema
-- Todavía no está implementada su funcionalidad, pero la dejamos acá, previendo su desarrollo.
(
	id										INT   IDENTITY(1,1) NOT NULL
	,ContextoId								INT			NOT NULL
	,Contextohabilitadi						BIT			NOT NULL DEFAULT 1 -- Habilitado para operar.
    ,IntentosFallidosDeLoginPermitidos		INT	-- Pasado esos intentos en el tiempo:  se bloquea al usaurio.
    ,IntervaloDeIntentosFallidoLogin		INT	-- Intervalo (Ultimos Minutos) en los que se chequea los intentos fallidos.
    ,MinDeBloqueoTrasIntentosFallidoLogin	INT	-- Minutos durante los que se bloqueará el login.
    ,PermitidasLasModificaciones			INT	-- Se permite modificar registros..
    ,PermitidasLasConsultas					INT	-- Se permite consultar información.
	,PermitidasLasExportaciones				INT	-- Se permite exportar informacion (excel, pdf, etc).
	,PermitidosLosEnviosDeCorreo			INT	-- Se permite el envío de correos.
    ,DiferenciaHorariaDelServidor			INT -- Para ajustar la hora de las fciones ejecutadas contra el servidor.
    ,Observaciones							VARCHAR(1000)
	,CONSTRAINT PK_ParametrosDelSistema_Id	PRIMARY KEY CLUSTERED (id)
)
GO




CREATE TABLE PrioridadesDeSoportes
(
    id									INT				NOT NULL -- id=1 DEFAULT
	,Nombre								VARCHAR(12)		NOT NULL
	,Orden								INT				NOT NULL
	,Observaciones						VARCHAR(1000)
	,Activo								BIT				NOT NULL	DEFAULT 1	
	,CONSTRAINT PK_PrioridadesDeSoportes_Id		PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_PrioridadesDeSoportes_Nombre	UNIQUE NONCLUSTERED (Nombre)
	,CONSTRAINT UQ_PrioridadesDeSoportes_Orden	UNIQUE NONCLUSTERED (Orden)
)
GO




CREATE TABLE Publicaciones
(
	id								INT   IDENTITY(1,1) NOT NULL
	,Fecha							DATE			NOT NULL
	,Titulo							VARCHAR(40)		NOT NULL
	,NumeroDeVersion				VARCHAR(30)
	,Realizada						BIT				NOT NULL
	,Observaciones					VARCHAR(8000)	
	,Hora							TIME(0)			NOT NULL
	,Activo							BIT				NOT NULL	DEFAULT 1	
	,CONSTRAINT PK_Publicaciones_Id		PRIMARY KEY CLUSTERED (id)
    ,CONSTRAINT UQ_Publicaciones_NumeroDeVersion	UNIQUE NONCLUSTERED (NumeroDeVersion)
)
GO
	



CREATE TABLE RecorridosDeDispositivos
(
	id							INT   IDENTITY(1,1)	NOT NULL
	,DispositivoId				INT					NOT NULL
	,UsuarioId					INT					NOT NULL
	,Usuario					VARCHAR(40)			NOT NULL
	,Token						VARCHAR(40)			NOT NULL
	,FechaDeEjecucion			DATETIME			NOT NULL
	,Latitud					VARCHAR(19)			NOT NULL
	,Longitud					VARCHAR(19)			NOT NULL
	,CONSTRAINT PK_RecorridosDeDispositivos_Id PRIMARY KEY CLUSTERED (id)
)
GO




CREATE TABLE RelAsig_Contactos_A_GruposDeContactos
(
	id									INT   IDENTITY(1,1)	NOT NULL
	,ContactoId							INT				NOT NULL
	,GrupoDeContactoId					INT				NOT NULL
	,CONSTRAINT PK_RelAsig_Contactos_A_GruposDeContactos_Id			PRIMARY KEY CLUSTERED (id)
    ,CONSTRAINT UQ_RelAsig_Contactos_A_GruposDeContactos_NoRepetir	UNIQUE NONCLUSTERED (ContactoId, GrupoDeContactoId)
)
GO




CREATE TABLE RelAsig_Contactos_A_TiposDeContactos -- Para indicar si un contacto es Clientes, Proveedor, etc.
(
	id									INT   IDENTITY(1,1)	NOT NULL
	,ContactoId							INT				NOT NULL
	,TipoDeContactoId					INT				NOT NULL
	,CONSTRAINT PK_RelAsig_Contactos_A_TiposDeContactos_Id			PRIMARY KEY CLUSTERED (id)
    ,CONSTRAINT UQ_RelAsig_Contactos_A_TiposDeContactos_NoRepetir	UNIQUE NONCLUSTERED (ContactoId, TipoDeContactoId)
)
GO




CREATE TABLE RelAsig_CuentasDeEnvios_A_Tablas
(
	id							INT   IDENTITY(1,1)	NOT NULL
	,ContextoId					INT				NOT NULL
	,CuentaDeEnvioId			INT				NOT NULL
	,TablaId					INT				NOT NULL
	,CONSTRAINT PK_RelAsig_CuentasDeEnvios_A_Tablas_Id	PRIMARY KEY CLUSTERED (id)
    ,CONSTRAINT UQ_RelAsig_CuentasDeEnvios_A_Tablas_NoRepetir	UNIQUE NONCLUSTERED (ContextoId, CuentaDeEnvioId, TablaId)
)
GO




CREATE TABLE RelAsig_RolesDeUsuarios_A_Paginas
(
	id										INT   IDENTITY(1,1) NOT NULL
	,RolDeUsuarioId							INT				NOT NULL
	,PaginaId								INT				NOT NULL
	,AutorizadoA_CargarLaPagina				BIT				NOT NULL
	,AutorizadoA_OperarLaPagina				BIT				NOT NULL
	,AutorizadoA_VerRegAnulados				BIT				NOT NULL
	,AutorizadoA_AccionesEspeciales			BIT				NOT NULL	
	,CONSTRAINT PK_RelAsig_RolesDeUsuarios_A_Paginas_Id		PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_RelAsig_RolesDeUsuarios_A_Paginas		UNIQUE NONCLUSTERED (RolDeUsuarioId, PaginaId)
)	
GO




CREATE TABLE RelAsig_RolesDeUsuarios_A_Usuarios
(
	id							INT   IDENTITY(1,1)	NOT NULL
	,RolDeUsuarioId				INT				NOT NULL
	,UsuarioId					INT				NOT NULL
	,FechaDesde					DATE			NOT NULL
	,FechaHasta					DATE
	,CONSTRAINT PK_RelAsig_RolesDeUsuarios_A_Usuarios_Id	PRIMARY KEY CLUSTERED (id)
    ,CONSTRAINT UQ_RelAsig_RolesDeUsuarios_A_Usuarios_NoRepetir		UNIQUE NONCLUSTERED (RolDeUsuarioId, UsuarioId, FechaDesde)
    ,CONSTRAINT UQ_RelAsig_RolesDeUsuarios_A_Usuarios_NoRepetir2	UNIQUE NONCLUSTERED (RolDeUsuarioId, UsuarioId, FechaHasta)
)
GO




CREATE TABLE RelAsig_Subsistemas_A_Publicaciones
(
	id							INT   IDENTITY(1,1)	NOT NULL
	,SubsistemaId				INT				NOT NULL
	,PublicacionId				INT				NOT NULL
	,UsuarioId					INT				NOT NULL
	,NumeroDeVersion			VARCHAR(30)
	,SVN						INT
	,Ubicacion					VARCHAR(150)
	,Observaciones				VARCHAR(1000)
	,CONSTRAINT PK_RelAsig_Subsistemas_A_Publicaciones_Id	PRIMARY KEY CLUSTERED (id)
    ,CONSTRAINT UQ_RelAsig_Subsistemas_A_Publicaciones_SP	UNIQUE NONCLUSTERED (SubsistemaId, PublicacionId)
    ,CONSTRAINT UQ_RelAsig_Subsistemas_A_Publicaciones_Subsistema	UNIQUE NONCLUSTERED	(SubsistemaId, NumeroDeVersion)
)
GO




CREATE TABLE RelAsig_TiposDeContactos_A_Contextos -- Es para "mostrar" el "tipo de contacto" en un Contexto y en otro NO.
(
	id									INT   IDENTITY(1,1)	NOT NULL
	,TipoDeContactoId					INT				NOT NULL
	,ContextoId							INT				NOT NULL
	,CONSTRAINT PK_RelAsig_TiposDeContactos_A_Contextos_Id			PRIMARY KEY CLUSTERED (id)
    ,CONSTRAINT UQ_RelAsig_TiposDeContactos_A_Contextos_NoRepetir	UNIQUE NONCLUSTERED (TipoDeContactoId, ContextoId)
)
GO

	


CREATE TABLE RolesDeUsuarios
-- Tabla administrada por el MasterAdmin --> Seteo el id "a Mano"
-- Prioridad: Define la prioridad sobre otro rol, para la asignación de permisos
(
	id										INT				NOT NULL
	,Nombre									VARCHAR(30)		NOT NULL
	,Observaciones							VARCHAR(1000)		
	,Prioridad								INT				NOT NULL
    ,SeMuestraEnAsignacionDePermisos		BIT				NOT NULL	DEFAULT 1			
    ,Activo									BIT				NOT NULL	DEFAULT 1	
	,CONSTRAINT PK_RolesDeUsuarios_Id		PRIMARY KEY CLUSTERED (id)
    ,CONSTRAINT UQ_RolesDeUsuarios_Nombre	UNIQUE NONCLUSTERED (Nombre)
    ,CONSTRAINT UQ_RolesDeUsuarios_Prioridad	UNIQUE NONCLUSTERED (Prioridad)
)
GO




CREATE TABLE Soportes
-- FechaDeCreacion puede ir nulo por que se completarán al cerrar la comunicacion
-- Observaciones será un campo privado para el MasterAdmin
(
	id								INT   IDENTITY(1,1)	NOT NULL
	,ContextoId						INT				NOT NULL
    ,UsuarioQueSolicitaId			INT				NOT NULL
	,PublicacionId					INT				-- No es FK
	,FechaDeEjecucion				DATETIME		NOT NULL
    ,UsuarioQueCerroId				INT				NOT NULL -- id=1 cuando "no está cerrada".
	,FechaDeCierre					DATETIME
	,Numero							INT				NOT NULL
	,Texto							VARCHAR(max)						
	,EstadoDeSoportesId				INT				NOT NULL
	,PrioridadDeSoporteId			INT				NOT NULL			
	,Observaciones					VARCHAR(max)
	,ObservacionesPrivadas			VARCHAR(max)
	,Cerrado						BIT				NOT NULL	DEFAULT 0
	,Activo							BIT				NOT NULL	DEFAULT 1	
	,CONSTRAINT PK_Soportes_Id		PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_Soportes_Numero	UNIQUE NONCLUSTERED (ContextoId, Numero)
)
GO




CREATE TABLE Subsistemas
(
    id									INT   IDENTITY(1,1)	NOT NULL
	,Nombre								VARCHAR(40)		NOT NULL
	,Observaciones						VARCHAR(1000)						
	,Activo								BIT				NOT NULL	DEFAULT 1	
	,CONSTRAINT PK_Subsistemas_Id		PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_Subsistemas_Nombre	UNIQUE NONCLUSTERED (Nombre)
)
GO




CREATE TABLE Tablas
-- Las observaciones son para el MasterWeb.
-- Al cargar un registro, el AutorizadoA_OperarLaPagina indica si tiene permiso para Eliminar o Activar/Anular según el caso.
-- Si una tabla tiene:
	-- LlevaActivo = 1 --> Se permite operar Activar/Anular y NO Eliminar (PermiteEliminar=0).
	-- PermiteEliminar = 1 --> Se permiteEliminar y NO Activar/Anular (LlevaActivo=0).
	-- TablaDeCore = 1 --> Va en el proyecto de Core.
	-- SeCreanPaginas = 1 --> Se crean las Páginas asociadas a la tabla en el script de Insert de la tabla.
	-- TieneArchivos = 1 --> Se Adjuntaran Archivos, en la Tabla "Archivos" vinculados a los registro de la tabla en cuestión. 
			-- y Se crea la Carpeta @Nomenclatura en el Disco, que los almacenará.
(
    id										INT   IDENTITY(1,1) NOT NULL -- id=1 DEFAULT (Para lo que no involucra Tablas).
	,IconoCSSId								INT				NOT NULL
	,Nombre									VARCHAR(80)		NOT NULL
	,NombreAMostrar							VARCHAR(100)	NOT NULL
	,Nomenclatura							VARCHAR(12)		NOT NULL -- Y CarpetaDeContenidos.
	,Observaciones							VARCHAR(1000)						
	,LlevaActivo							BIT				NOT NULL
	,PermiteEliminar						BIT				NOT NULL
	,TablaDeCore							BIT				NOT NULL
	,SeCreanPaginas							BIT				NOT NULL
	,TieneArchivos							BIT				NOT NULL
	--,TablaDeSistema							BIT				NOT NULL	DEFAULT 0 -- IF=1 --> ??.
	,CampoAMostrarEnFK						VARCHAR(100)	NOT NULL DEFAULT 'Nombre' -- Es el campo (de la propia tabla) que se muestra, por ejemplo, en un listado DDL cuando es FK de otra tabla.
	,CampoQuePuedeSerIdString				VARCHAR(100)	NOT NULL DEFAULT '' -- Es el campo (de la propia tabla) que puede ser entrada IdsString --> genera un SP #NombreTabla@__Insert_by_@#NombreCampo#IdsString.
	,CamposAExcluirEnElInsert				VARCHAR(1000)	NOT NULL DEFAULT '' -- Separados por comas. Por Ejemplo: 'Nombre, Apellido' (id y Numero se excluyen siempre). Sirve para Generador de SPs.
	,CamposAExcluirEnElUpdate				VARCHAR(1000)	NOT NULL DEFAULT '' -- Separados por comas. Por Ejemplo: 'Nombre, Apellido' (id, Activo y Numero se excluyen siempre). Sirve para Generador de SPs.
	,PermiteInsertAnonimamente				BIT NOT NULL DEFAULT '0' -- Con un usuario que no está logueado.
	,PermiteListarDDLAnonimamente			BIT NOT NULL DEFAULT '0' -- Con un usuario que no está logueado.
	,SeGeneranAutoSusSPsDeABM				BIT NOT NULL DEFAULT '1' -- Con el Generador de SPs.
	,SeGeneranAutoSusSPsDeRegistros			BIT NOT NULL DEFAULT '1' -- Con el Generador de SPs.
	,SeGeneranAutoSusSPsDeListados			BIT NOT NULL DEFAULT '1' -- Con el Generador de SPs.
	,CONSTRAINT PK_Tablas_Id				PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_Tablas_Nombre			UNIQUE NONCLUSTERED (Nombre)
	,CONSTRAINT UQ_Tablas_Nomenclatura		UNIQUE NONCLUSTERED (Nomenclatura)
	,CONSTRAINT CH_Tablas_LlevaPermite		CHECK (LlevaActivo = 0 OR PermiteEliminar = 0) -- Solo es permitida 1 de las 2, o ninguna.
)
GO




CREATE TABLE Tareas
-- Permitirá tener Archivos enlazados.
(
	id								INT   IDENTITY(1,1) NOT NULL
	,ContextoId						INT				NOT NULL -- Depende del contexto.
    ,UsuarioOriginanteId			INT				NOT NULL -- El que "pide" la tarea, que puede ser distinto de quien la carga.
	,UsuarioDestinatarioId			INT				NOT NULL -- A quién se le asigna la tarea para que la realice.
	,FechaDeInicio					DATE			NOT NULL -- Puede ser que la cargue con una fecha posterior de inicio.
	,FechaLimite					DATE			NOT NULL -- Es la fecha en la que espera que esté realizada la tarea. No impolica ninguna otra acción.
	,Numero							INT				NOT NULL
	,TipoDeTareaId					INT				NOT NULL -- Es como "Categorizar" o "Clasificar" a la tarea.
	,EstadoDeTareaId				INT				NOT NULL -- Asignada, Iniciada, Finalizada, Aplazada, Esperando Acción, Etc.
	,Titulo							VARCHAR(100)	NOT NULL	
	,ImportanciaDeTareaId			INT				NOT NULL -- Baja, Media, Alta
	,TablaId						INT				NOT NULL -- id=1 cuando es "sin tabla".	La tarea puede estar relacionada con un registros particular de cualquier tabla.
	,RegistroId						INT				NULL -- No es FK. La tarea puede estar relacionada con un registros particular de cualquier tabla.
	,Observaciones					VARCHAR(2000)	
	,Activo							BIT				NOT NULL	DEFAULT 1	
	,CONSTRAINT PK_Tareas_Id		PRIMARY KEY CLUSTERED (id)
    ,CONSTRAINT UQ_Tareas			UNIQUE NONCLUSTERED (ContextoId, FechaDeInicio, TipoDeTareaId, Titulo)
	,CONSTRAINT UQ_Tareas_Numero	UNIQUE NONCLUSTERED (ContextoId, Numero)
)
GO




CREATE TABLE TiposDeActores
-- Sistemas, Internos, Comitentes, Contratistas, Externos, Clientes, etc.
(
    id										INT   IDENTITY(1,1) NOT NULL
	,Nombre									VARCHAR(30)		NOT NULL
	,Observaciones							VARCHAR(1000)
	--,TiposDeActorDeSistema					BIT				NOT NULL	DEFAULT 0 -- IF=1 --> No se muestra a los usuarios de trabajo
	,CONSTRAINT PK_TiposDeActores_Id		PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_TiposDeActores_Nombre	UNIQUE NONCLUSTERED (Nombre)
)
GO




CREATE TABLE TiposDeArchivos
-- No se define a nivel de formato (PDF, Excel, Word, etc), si no a nivel de tipo (Cad, office, Imágen, etc).
(
    id											INT   IDENTITY(1,1) NOT NULL
	,Nombre										VARCHAR(40)		NOT NULL
	,Observaciones								VARCHAR(1000)
	,CONSTRAINT PK_TiposDeArchivos_Id			PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_TiposDeArchivos_Nombre		UNIQUE NONCLUSTERED (Nombre)
)
GO




CREATE TABLE TiposDeContactos -- //  VA CON CONTEXTO, SI O NO ? // SI ES "SIN" --> MOSTRAMOS LOS REGISTROS EN TODOS LOS CONTEXTO U OCULTAMOS ALGUNOS SEGUN EL CONTEXTO ?
-- Clientes, Contratistas, Proveedores, etc.
(
    id										INT   IDENTITY(1,1) NOT NULL
	,Nombre									VARCHAR(30)		NOT NULL
	,Observaciones							VARCHAR(1000)
	,CONSTRAINT PK_TiposDeContactos_Id		PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_TiposDeContactos_Nombre	UNIQUE NONCLUSTERED (Nombre)
)
GO




CREATE TABLE TiposDeLogLogins
-- Dejar el Mensaje "vacío" fara los Login Exitosos, o indicar en él, el mesaje del Login Fallido.
(
    id											INT				NOT NULL
	,ConCookie									BIT				NOT NULL	DEFAULT 0
	,Nombre										VARCHAR(50)		NOT NULL
	,MensajeDeError								VARCHAR(1000)	NOT NULL -- Mensaje hacia el usaurio del login.
	,Observaciones								VARCHAR(1000)
	,CONSTRAINT PK_TiposDeLogLogins_Id			PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_TiposDeLogLogins_Nombre		UNIQUE NONCLUSTERED (Nombre)
)
GO




CREATE TABLE TiposDeOperaciones
(
    id											INT				NOT NULL
	,Nombre										VARCHAR(12)		NOT NULL
	,Texto										VARCHAR(20)
	,Observaciones								VARCHAR(1000)
	,CONSTRAINT PK_TiposDeOperaciones_Id		PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_TiposDeOperaciones_Nombre	UNIQUE NONCLUSTERED (Nombre)
)
GO




CREATE TABLE TiposDeTareas
-- Es como "Categorizar" o "Clasificar" a la tarea. La operarán los Administradores.
(
    id									INT   IDENTITY(1,1) NOT NULL
	,ContextoId							INT				NOT NULL
    ,Nombre								VARCHAR(30)		NOT NULL
	,Observaciones						VARCHAR(1000)
	,Activo								BIT				NOT NULL	DEFAULT 1
	,CONSTRAINT PK_TiposDeTareas_Id		PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_TiposDeTareas_Nombre	UNIQUE NONCLUSTERED (ContextoId, Nombre)
)
GO




CREATE TABLE Ubicaciones
-- indica la ubicación de una carpeta (Ruta), la cual es única en la BD.
(
    id									INT   IDENTITY(1,1)	NOT NULL
	,Nombre								VARCHAR(150)		NOT NULL
	,Observaciones						VARCHAR(1000)
	,UbicacionAbsoluta					BIT					NOT NULL
	,CONSTRAINT PK_Ubicaciones_Id		PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_Ubicaciones_Nombre	UNIQUE NONCLUSTERED (Nombre)
)
GO





CREATE TABLE Unidades
 -- Inicialmente, la usa cada "Elemento" pero será una tabla generica.
(
    id									INT   IDENTITY(1,1)	NOT NULL
	,Codigo								VARCHAR(8)		NOT NULL
    ,Nombre								VARCHAR(50)		NOT NULL
	,Observaciones						VARCHAR(1000)	
	,CONSTRAINT PK_Unidades_Id			PRIMARY KEY CLUSTERED (id)
	,CONSTRAINT UQ_Unidades_Codigo		UNIQUE NONCLUSTERED (Codigo)
	,CONSTRAINT UQ_Unidades_Nombre		UNIQUE NONCLUSTERED (Nombre)
)
GO




CREATE TABLE Usuarios
(
	id									INT   IDENTITY(1,1)	NOT NULL -- id=1 DEFAULT (Para lo que no involucra Usuario)
	,ActorId							INT				NOT NULL
	,ContextoId							INT				NOT NULL
    ,UserName							VARCHAR(40)		NOT NULL
	,Pass								VARCHAR(40)		NOT NULL
	,Nombre								VARCHAR(40)		NOT NULL
	,Apellido							VARCHAR(40)		NOT NULL
	,Email								VARCHAR(60)
	,Email2								VARCHAR(60)
	,Telefono							VARCHAR(60)
	,Telefono2							VARCHAR(60)
	,Direccion							VARCHAR(1000)
	,Observaciones						VARCHAR(1000)
	,Activo								BIT				NOT NULL	DEFAULT 1
	,UltimoLoginSesionId				VARCHAR(24)		NOT NULL -- No es FK
	,UltimoLoginFecha					DATETIME
	--,UsuarioDeSistema					BIT				NOT NULL	DEFAULT 0 -- IF=1 --> No se muestra a los "usuarios de trabajo".
	,EsUsuarioAdminAnonimo				BIT				NOT NULL	DEFAULT 0 -- IF=1 --> Es el Usuario que se utiliza para las operaciones que realice un usuario sin loguearse (con lo cual no tiene un UsuarioId válido). No permitirá que se loguee con él.
    ,AuthCookie							VARCHAR(255)
	,FechaDeExpiracionCookie			DATETIME
	,CONSTRAINT PK_Usuarios_Id			PRIMARY KEY CLUSTERED (id)
    ,CONSTRAINT UQ_Usuarios_UserName	UNIQUE NONCLUSTERED (ContextoId, UserName)
	--,CONSTRAINT UQ_Usuarios_UltimoLoginSesionId UNIQUE NONCLUSTERED (UltimoLoginSesionId)
	-- Lo sacamos, era para que no se pueda asignar una sesion a otro usuario (mediante hackeo), 
	-- pero si se podrá, para q se pueda cambiar de usuario, ya q el iis asigna misma sesion.
)
GO




-- ---------------------------
-- TABLAS - Fin de la creación
-- =====================================================