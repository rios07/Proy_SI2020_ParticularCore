@model ControladoresCore.ViewModels.InformesVM
@using ControladoresCore.Extensiones
@{
    ViewBag.Title = "Informes - Insertar registro";
}

@using (Html.BeginForm())
{
    using (Html.BeginCard("Nuevo informe"))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                

                <div class=" col-sm-12">
                    <h5 class="pull-right text-muted " style="
                    padding-top: -20px;
                    border-top-width: -20px;
                    margin-top: -10px;
                    padding-top: 0px;">
                        .
                    </h5>
                </div>
            </div>
            <div class="row">
                <div id="divCampos" class="col-md-12 ">
                    <div class="form-group ">
                        @Html.LabelFor(model => model.FechaDeInforme, htmlAttributes: new { @class = "col-form-label col-md-3" })
                        <div class="col-md-9">
                            <div class="input-group">
                                <span class="input-group-addon bg-custom b-0"><i class="fa fa-calendar"></i></span>
                                @Html.EditorFor(model => model.FechaDeInforme, new { htmlAttributes = new { @class = "form-control datepicker", @Value = FuncionesCore.FFechas.FechaAhoraHTML5() } })
                                @Html.ValidationMessageFor(model => model.FechaDeInforme, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoriaDeInformeId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(m => m.CategoriaDeInformeId, new SelectList(Model.Categorias, "Id", "Nombre", Model.CategoriaDeInformeId), "Seleccione una opcion...", new { @class = "form-control " })
                            @Html.ValidationMessageFor(model => model.CategoriaDeInformeId, "", new { @class = "text-danger" })
                        </div>
                        <br />
                        <button style="margin-left: 10px;" onclick="return false" class="btn btn-primary  " data-toggle="modal" data-target="#CategoriaDeInformeIframe">Agregar nueva categoria</button>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "col-form-label col-md-3 " })
                        <div class="col-md-9">

                            @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })


                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Observaciones, htmlAttributes: new { @class = "col-form-label col-md-3 " })
                        <div class="col-md-9">

                            @Html.EditorFor(model => model.Observaciones, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })


                        </div>
                    </div>

                </div>

                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Texto, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.TextAreaFor(model => model.Texto, new { @class = "form-control  " })
                            @Html.ValidationMessageFor(model => model.Texto, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="card" id="dyn_2">
        <h4 style="padding:1px; background-color:var(--color-primary)" class="card-header mt-0"></h4>
        <div class="card-body fade-in p-2">
            <div class="col-lg-12 pull-left botonera">
                @HtmlHelperExtension.Boton("Informes","Listado",ViewBag.Seccion)
                @HtmlHelperExtension.Boton("Insert", ViewBag.DatosDeUnaPagina.AutorizadoACargarLaPagina,ViewBag.Seccion)
            </div>
        </div>
    </div>
}
<div class="modal fade" id="CategoriaDeInformeIframe" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header pb-2 pt-0 pl-2 pr-1" style="background: var(--color-primary);color: #ffffff;">
                <button type="button" class="close" data-dismiss="modal">
                    <span color="white" aria-hidden="true">&times;</span><span class="sr-only">Close</span>
                </button>
                <h4 class="modal-title" id="CategoriaDeInformeIframe">Agregar categoria de informe</h4>
            </div>
            <div class="modal-body row" style="height:600px">

                <iframe src="~/Administracion/CategoriasDeInformes/Insert" frameborder="0" style="position: relative; height: 100%; width: 100%;">
                    <p>Navegador no compatible. Utilice otro o inserte desde la pagina correspondiente.</p>
                </iframe>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>

<script>
    function manejarMensaje() {

        $.ajax({
            url: '@Url.Action("RecargarDDL")',
            type: 'get',
            dataType: 'json',
            contentType: 'application/json',
            success: function (data) {
                var VM = data;
                var arraylist = new Array();
                for (var i = 0; i < VM.Categorias.length; i++) {
                    arraylist.push({ Id: VM.Categorias[i].Id, Nombre: VM.Categorias[i].Nombre });
                }
                RecargarDDL('CategoriaDeInformeId', arraylist);

                $('#CategoriaDeInformeIframe').modal('toggle')
                swal("Categoria agregada con exito!", "", "success")

            },

        });
    }

    
</script>
    